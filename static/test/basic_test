(define a 3)
(define (b x) (+ 1 x))
(define c (lambda (x) (+ 1 x)))

(b a)
(c a)
(+ 1 a)
(+ 1 2)
(+ 5 3 4)

(define (d xx) (lambda (x) (+ xx x)))

((d 1) a)

(- a 1)
(= a 3)
(= a 1)

(define (fib n)
  (cond ((= n 0) 0)
        ((= n 1) 1)
        (else (+ (fib (- n 1))
                 (fib (- n 2))))))

(fib 10)

(define (fib2 n)
    (define (fib-iter a b count)
        (if (= count 0)
            b
            (fib-iter (+ a b) a (- count 1))))
    (fib-iter 1 0 n))

(fib2 10)


